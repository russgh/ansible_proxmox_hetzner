- name: "Install ZFS pool"
  hosts: rebuild_hetzner_deb12_zfs
  user: root

  # Install single zpool

  # Source for installation instructions:
  #   https://openzfs.github.io/openzfs-docs/Getting%20Started/Debian/index.html#installation

  # Get the drive info from the inventory file
  # Check if pool exists
  # Create pool
  # Check each file system exists
  # So make this a role called from the playlist that:
  #   boots rescue to deb12 on zfs
  #   does this
  #   installs proxmox
  #   configures storage devices on proxmoxz

  vars:
    zfs_pool_name: tank
    zfs_pool_mode: mirror
    zfs_pool_devices: "{{hostvars[inventory_hostname].zfs_tank_devices }}"
    zfs_pool_options:
      - "-o ashift=12"
      - "-o autotrim=on"
      - "-o cachefile=/etc/zpool.cache"
      - "-O acltype=posixacl"
      - "-O compression=lz4"
      - "-O dnodesize=auto"
      - "-O relatime=on"
      - "-O xattr=sa"
      - "-O normalization=formD"
    zfs_pool_state: present

    zfs_filesystems:
      - vm-drives

  tasks:
    - name: Check ZFS pool existence
      ansible.builtin.command: zpool list -Ho name {{ zfs_pool_name }}
      register: result_pool_list
      ignore_errors: true
      changed_when: false

    - name: Create ZFS pool
      ansible.builtin.command: >-
        zpool create
        {{ zfs_pool_options | join(' ') }}
        {{ zfs_pool_name }}
        {{ zfs_pool_mode if zfs_pool_mode else '' }}
        {{ zfs_pool_devices | join(' ') }}
      when:
        - zfs_pool_state | default('present') == 'present'
        - result_pool_list.rc == 1
      changed_when: my_output.rc != 0

    - name: Import created pool
      ansible.builtin.command: >-
        zpool import {{ zfs_pool_name }}
      when:
        - zfs_pool_state | default('present') == 'present'
        - result_pool_list.rc == 1
      changed_when: my_output.rc != 0

    - name: Create ZFS file systems
      community.general.zfs:
        name: "{{ zfs_pool_name }}/{{ item }}"
        state: present
      with_items: "{{ zfs_filesystems }}"
      tags: storage

    # - name: Gather space usage about all imported ZFS pools
    #   community.general.zpool_facts: properties='free,size'

    # - name: Print gathered information
    #   ansible.builtin.debug:
    #     msg: "ZFS pool {{ item.name }} has {{ item.free }} free space out of {{ item.size }}."
    #   with_items: "{{ ansible_zfs_pools }}"

    # - name: PROXMOX post tasks - Copy ZFS apt preferences
    #   ansible.builtin.copy:
    #     src: roles/hetzner_pve/files/90_zfs
    #     dest: /etc/apt/preferences.d/90_zfs
    #     owner: root
    #     group: root
    #     mode: "0755"

    # - name: create datasets in pool
    #   command: >-
    #     zfs create -p {{ zfs_pool_name }}/{{item}}
    #   loop: "{{ zfs_filesystems }}"
    #   when:
    #     - zfs_pool_state | default('present') == 'present'

    # - name: destroy ZFS pool
    #   command: zpool destroy {{ zfs_pool_name }}
    #   when:
    #     - zfs_pool_state | default('present') == 'absent'
    #     - result_pool_list.rc == 0
