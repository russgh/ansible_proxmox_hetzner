---
# tasks file for install_proxmox

# Based on instructions at: https://pve.proxmox.com/wiki/Install_Proxmox_VE_on_Debian_12_Bookworm

# TODO:
# Add assertions to check server is compatible?
# Also that proxmox not installed already?

- name: SERVER - Get OS release name and network details
  ansible.builtin.setup:
    gather_subset:
      - distribution
      - network

- name: Add fqdn to hosts file
  ansible.builtin.lineinfile:
    path: /etc/hosts
    search_string: "{{ ansible_default_ipv4.address }}"
    line: "{{ ansible_default_ipv4.address }} {{ inventory_hostname }} {{ inventory_hostname_short }}"

# remove 127.0.1.1 from hosts as causes proxmox install to fail
- name: Remove 127.0.1.1 from hosts file
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "127.0.1.1"
    line: ""

- name: SERVER - Add repository key
  ansible.builtin.get_url:
    url: "https://enterprise.proxmox.com/debian/proxmox-release-{{ ansible_facts.distribution_release }}.gpg"
    dest: "/etc/apt/trusted.gpg.d/proxmox-release-{{ ansible_facts.distribution_release}}.gpg"

- name: SERVER - Add repository
  apt_repository:
    repo: "deb [arch=amd64] http://mirror.hetzner.com/debian/pve {{ ansible_facts.distribution_release }} pve-no-subscription"
    state: present
    filename: pve-install-repo
    update_cache: true

# Removed as was causing problems by updating grub-pc
# Seems to work fine without it
# - name: SERVER - Upgrade all packages before setup Proxmox
#   apt: upgrade=dist force_apt_get=yes
- name: SERVER - Upgrade all packages before setup proxmox
  ansible.builtin.apt:
    #upgrade: dist
    update_cache: yes
    dpkg_options: "force-confold,force-confdef"

- name: SERVER - Check if reboot required
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required

- name: SERVER - Reboot required after packages upgraded
  ansible.builtin.reboot:
  when: reboot_required.stat.exists

- name: SERVER - Disable "externally-managed-environment"
  ansible.builtin.file:
    path: /usr/lib/python3.11/EXTERNALLY-MANAGED
    state: absent

- name: PROXMOX - Install proxmox default kernel
  ansible.builtin.apt:
    pkg:
      - proxmox-default-kernel

- name: PROXMOX - Reboot required after proxmox default kernel installed
  ansible.builtin.reboot:

- name: PROXMOX - Install proxmox-ve, postfix, open-iscsi and chrony
  ansible.builtin.apt:
    pkg:
      - proxmox-ve
      - postfix
      - open-iscsi
      - chrony
    state: present

- name: PROXMOX - Remove debian default kernels
  ansible.builtin.apt:
    pkg:
      - linux-image-amd64
      - "linux-image-6.1*"
    state: absent

- name: PROXMOX - Update GRUB
  ansible.builtin.shell: update-grub

- name: PROXMOX - Remove os-prober
  ansible.builtin.apt:
    pkg:
      - os-prober
    state: absent

- name: PROXMOX - remove enterprise repo
  file:
    path: /etc/apt/sources.list.d/pve-enterprise.list
    state: absent
# - name: fix
#   shell: apt -q -y purge firmware-bnx2x firmware-realtek firmware-linux firmware-linux-free firmware-linux-nonfree

# - name: PROXMOX - Change postfix mailer type
#   debconf: name=postfix
#     question="postfix/main_mailer_type"
#     value="'Local only'"
#     vtype="string"

# - name: PROXMOX - Change postfix mailer name
#   debconf: name=postfix
#     question="postfix/mailname"
#     value="{{ hetzner_pve_acme_domain }}"
#     vtype="string"

# - name: PROXMOX - Install proxmox and some packages
#   ansible.builtin.apt:
#     pkg:
#       - proxmox-ve
#       - postfix
#       - open-iscsi
#       - python3-pip
#       #- cloud-init
#       - libguestfs-tools
#       - unzip
#       - sshpass
#       - telnet
#       - expect
#       - python3
#       - openssh-server
#   register: hetzner_pve_proxmox_install

# - name: PROXMOX - Install custom packages
#   ansible.builtin.apt:
#     pkg: "{{ item }}"
#   with_items: "{{ hetzner_pve_custom_packages }}"

# ### Remove enterprise pve repo
# - name: PROXMOX - remove enterprise repo
#   file:
#     path: /etc/apt/sources.list.d/pve-enterprise.list
#     state: absent

# - name: PROXMOX - ifupdown2 fix - reinstall package
#   ansible.builtin.apt:
#     name: "ifupdown2"
#     state: present
#     purge: true
#     update_cache: true
#     force: true

# - name: PROXMOX - ifupdown2 fix - ensure networking is enabled
#   ansible.builtin.service:
#     name: networking
#     enabled: true
